CONSTTK const 1
INTTK int 1
IDENFR xx 1
LBRACK [ 1
INTCON 2 1
<Number> 1
<PrimaryExp> 1
<UnaryExp> 1
<MulExp> 1
<AddExp> 1
<ConstExp> 1
RBRACK ] 1
ASSIGN = 1
LBRACE { 1
INTCON 1 1
<Number> 1
<PrimaryExp> 1
<UnaryExp> 1
<MulExp> 1
<AddExp> 1
<ConstExp> 1
<ConstInitVal> 1
COMMA , 1
INTCON 2 1
<Number> 1
<PrimaryExp> 1
<UnaryExp> 1
<MulExp> 1
<AddExp> 1
<ConstExp> 1
<ConstInitVal> 1
RBRACE } 1
<ConstInitVal> 1
<ConstDef> 1
SEMICN ; 1
<ConstDecl> 1
INTTK int 3
MAINTK main 3
LPARENT ( 3
RPARENT ) 3
LBRACE { 3
INTTK int 4
IDENFR c 4
ASSIGN = 4
INTCON 1 4
<Number> 4
<PrimaryExp> 4
<UnaryExp> 4
<MulExp> 4
<AddExp> 4
<Exp> 4
<InitVal> 4
<VarDef> 4
SEMICN ; 4
<VarDecl> 0
INTTK int 5
IDENFR d 5
ASSIGN = 5
INTCON 2 5
<Number> 5
<PrimaryExp> 5
<UnaryExp> 5
<MulExp> 5
<AddExp> 5
<Exp> 5
<InitVal> 5
<VarDef> 5
SEMICN ; 5
<VarDecl> 0
INTTK int 6
IDENFR a 6
LBRACK [ 6
INTCON 2 6
<Number> 6
<PrimaryExp> 6
<UnaryExp> 6
<MulExp> 6
<AddExp> 6
<ConstExp> 6
RBRACK ] 6
LBRACK [ 6
INTCON 2 6
<Number> 6
<PrimaryExp> 6
<UnaryExp> 6
<MulExp> 6
<AddExp> 6
<ConstExp> 6
RBRACK ] 6
ASSIGN = 6
LBRACE { 6
LBRACE { 6
IDENFR c 6
<LVal> 6
<PrimaryExp> 6
<UnaryExp> 6
<MulExp> 6
<AddExp> 6
PLUS + 6
IDENFR d 6
<LVal> 6
<PrimaryExp> 6
<UnaryExp> 6
<MulExp> 6
<AddExp> 6
<Exp> 6
<InitVal> 6
COMMA , 6
INTCON 2 6
<Number> 6
<PrimaryExp> 6
<UnaryExp> 6
<MulExp> 6
<AddExp> 6
<Exp> 6
<InitVal> 6
RBRACE } 6
<InitVal> 6
COMMA , 6
LBRACE { 6
INTCON 3 6
<Number> 6
<PrimaryExp> 6
<UnaryExp> 6
<MulExp> 6
<AddExp> 6
<Exp> 6
<InitVal> 6
COMMA , 6
INTCON 4 6
<Number> 6
<PrimaryExp> 6
<UnaryExp> 6
<MulExp> 6
<AddExp> 6
<Exp> 6
<InitVal> 6
RBRACE } 6
<InitVal> 6
RBRACE } 6
<InitVal> 6
<VarDef> 6
SEMICN ; 6
<VarDecl> 0
INTTK int 7
IDENFR b 7
LBRACK [ 7
INTCON 2 7
<Number> 7
<PrimaryExp> 7
<UnaryExp> 7
<MulExp> 7
<AddExp> 7
<ConstExp> 7
RBRACK ] 7
LBRACK [ 7
INTCON 2 7
<Number> 7
<PrimaryExp> 7
<UnaryExp> 7
<MulExp> 7
<AddExp> 7
<ConstExp> 7
RBRACK ] 7
<VarDef> 7
SEMICN ; 7
<VarDecl> 0
IDENFR c 9
<LVal> 9
IDENFR c 9
<LVal> 9
ASSIGN = 9
IDENFR a 9
<LVal> 9
<PrimaryExp> 9
<UnaryExp> 9
<MulExp> 9
<AddExp> 9
PLUS + 9
INTCON 2 9
<Number> 9
<PrimaryExp> 9
<UnaryExp> 9
<MulExp> 9
<AddExp> 9
<Exp> 9
SEMICN ; 9
<Stmt> 9
IDENFR d 10
<LVal> 10
IDENFR d 10
<LVal> 10
ASSIGN = 10
IDENFR c 10
LBRACK [ 10
INTCON 1 10
<Number> 10
<PrimaryExp> 10
<UnaryExp> 10
<MulExp> 10
<AddExp> 10
<Exp> 10
RBRACK ] 10
<LVal> 10
<PrimaryExp> 10
<UnaryExp> 10
<MulExp> 10
<AddExp> 10
<Exp> 10
SEMICN ; 10
<Stmt> 10
RBRACE } 11
<Block> 3
<MainFuncDef> 3
<CompUnit> 1
